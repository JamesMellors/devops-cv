trigger:
- master
- release/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: 'jm-docker-hub'
        repository: 'jamesmellors/cv-devops'
        command: 'buildAndPush'
        Dockerfile: '**/website/Dockerfile'
        tags: '$(Build.SourceBranchName)'
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/*.yaml'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'manifests'
        publishLocation: 'Container'
- stage: Deploy
  displayName: Deploy image
  jobs:  
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'manifests'
        itemPattern: '**/*.yaml'
        targetPath: '$(System.ArtifactsDirectory)'
   
    - task: HelmDeploy@0
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscription: 'azure-resource-manager-service-connection'
        azureResourceGroup: 'kubernetes_prod'
        kubernetesCluster: 'k8prod_prod'
        namespace: 'default'
        command: 'upgrade'
        chartType: 'FilePath'
        chartPath: '$(System.ArtifactsDirectory)/helm'
        releaseName: 'devops-cv'
    # - task: KubernetesManifest@0
    #   inputs:
    #     action: 'deploy'
    #     kubernetesServiceConnection: 'azure-kubernetes-connection'
    #     namespace: 'default'
    #     manifests: '$(System.ArtifactsDirectory)/deploy/deployment.yaml'
    #     containers: 'jamesmellors/cv-devops:$(tag)'